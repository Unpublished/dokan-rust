name: Rust

on: [push, pull_request, workflow_dispatch]

env:
  CARGO_TERM_COLOR: always
  UST_BACKTRACE: 1
jobs:
  build:
    runs-on: windows-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Download and install dokany
      shell: pwsh
      run: |
          Invoke-WebRequest https://github.com/dokan-dev/dokany/releases/download/v2.1.0.1000/DokanSetup.exe -OutFile "$Env:TEMP\DokanSetup.exe"
          Start-Process "$Env:TEMP\DokanSetup.exe" -ArgumentList '/quiet /norestart' -Wait

          if ($Env:USE_INSTALLED_LIB -eq $true) {
              $Env:DokanLibrary2_LibraryPath_x64 = 'C:\Program Files\Dokan\Dokan Library-2.1.0\lib\'
              $Env:DokanLibrary2_LibraryPath_x86 = 'C:\Program Files\Dokan\Dokan Library-2.1.0\x86\lib\'
          } else {
              Remove-Item 'C:\Windows\System32\dokan2.dll'
              Remove-Item 'C:\Windows\SysWOW64\dokan2.dll'
          }
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --release --verbose
  clippy:
    runs-on: windows-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Clippy
      run: cargo clippy
